{"version":3,"file":"static/js/134.befd5091.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAS,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCAAwCC,IADxC,cACjBE,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAMTC,EAAQ,mCAAG,WAAMC,GAAN,uFACCP,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBM,IAFrB,cAChBJ,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,sDAQRG,EAAU,mCAAG,WAAMC,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCR,IADrC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAMVM,EAAO,mCAAG,WAAMD,GAAN,uFACET,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,IAFjB,cACfE,EADe,yBAIdA,EAASC,KAAKO,MAJA,2CAAH,sDAQPC,EAAU,mCAAG,WAAMH,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,IAFd,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,iHCyCvB,UAvEe,WAAO,IAAD,EACnB,GAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAY,UAAGF,EAAaG,IAAI,uBAApB,QAAuC,GAEzDC,QAAQC,IAAIR,GACZ,IAAMS,GAAWC,EAAAA,EAAAA,OAWjBC,EAAAA,EAAAA,YAAU,WACR,GAAqB,KAAjBN,EAAJ,CAGA,IAAMO,EAAQ,mCAAG,8GAEMpB,EAAAA,EAAAA,IAASa,GAFf,OAEPf,EAFO,OAGbW,EAAUX,GAHG,gDAKbiB,QAAQC,IAAR,MALa,yDAAH,qDAQdI,GATC,CAUF,GAAE,CAACP,IAUJ,OACE,iCACE,kBAAMQ,UAAU,OAAOC,SAlCN,SAAAC,GAGnB,GAFAA,EAAMC,iBAEqB,KAAvBD,EAAME,OAAOC,MACf,OAAOC,MAAM,kBAEff,EAAgB,CAAEC,aAAcU,EAAME,OAAOC,OAC9C,EA2BG,WACE,kBACEL,UAAU,QACVO,KAAK,OACLC,GAAG,SACHC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAlBa,SAAAV,GACnB,GAA2B,KAAvBA,EAAME,OAAOC,MACf,OAAOd,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,aAAcU,EAAME,OAAOC,OAE9C,EAaOA,MAAOb,KAGT,mBAAQe,KAAK,SAASP,UAAU,SAAhC,wBAIF,wBACGb,EAAO0B,KAAI,gBAAGC,EAAH,EAAGA,eAAgBN,EAAnB,EAAmBA,GAAnB,OACV,yBACE,SAAC,KAAD,CAAMO,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMrB,GAA1C,SACGkB,KAFIN,EADC,QAUnB,C","sources":["components/Services/API.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ca1e14ffb473d6a82f337d8c688837e0';\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const getMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів.\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\n// запит оглядів для сторінки кінофільму\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n","import { getQuery } from 'components/Services/API';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentQuery = searchParams.get('currentQuery') ?? '';\n  // const [value, setValue] = useState(searchParams.get('currentQuery') ?? '');\n  console.log(movies);\n  const location = useLocation();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (event.target.value === '') {\n      return alert('Input is empty');\n    }\n    setSearchParams({ currentQuery: event.target.value });\n  };\n\n  useEffect(() => {\n    if (currentQuery === '') {\n      return;\n    }\n    const addQuery = async () => {\n      try {\n        const data = await getQuery(currentQuery);\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    addQuery();\n  }, [currentQuery]);\n\n  const handleChange = event => {\n    if (event.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ currentQuery: event.target.value });\n    // setValue(event.target.value);\n  };\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          id=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleChange}\n          value={currentQuery}\n        />\n\n        <button type=\"submit\" className=\"button\">\n          Search\n        </button>\n      </form>\n      <ul>\n        {movies.map(({ original_title, id }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getMovies","response","data","results","getQuery","query","getDetails","movieId","getCast","cast","getReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","currentQuery","get","console","log","location","useLocation","useEffect","addQuery","className","onSubmit","event","preventDefault","target","value","alert","type","id","autoComplete","autoFocus","placeholder","onChange","map","original_title","to","state","from"],"sourceRoot":""}