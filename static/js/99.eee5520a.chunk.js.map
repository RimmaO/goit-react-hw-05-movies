{"version":3,"file":"static/js/99.eee5520a.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAS,mCAAG,oGACAF,EAAAA,EAAAA,IAAA,qCAAwCC,IADxC,cACjBE,EADiB,yBAEhBA,EAASC,KAAKC,SAFE,2CAAH,qDAMTC,EAAQ,mCAAG,WAAMC,GAAN,uFACCP,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBM,IAFrB,cAChBJ,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,sDAQRG,EAAU,mCAAG,WAAMC,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCR,IADrC,cAClBE,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAMVM,EAAO,mCAAG,WAAMD,GAAN,uFACET,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,IAFjB,cACfE,EADe,yBAIdA,EAASC,KAAKO,MAJA,2CAAH,sDAQPC,EAAU,mCAAG,WAAMH,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,IAFd,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,qD,qKChCVQ,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,6EAKLE,EAASF,EAAAA,GAAAA,OAAH,oF,SCyDnB,EA/De,WAAO,IAAD,EACnB,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAY,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC5CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACPJ,GAAgBD,EAAgB,CAAC,GAElC,IAAMM,EAAQ,mCAAG,8GAEMtB,EAAAA,EAAAA,IAASiB,GAFf,OAEPnB,EAFO,OAGbe,EAAUf,GAHG,gDAKbyB,QAAQC,IAAR,MALa,yDAAH,qDAQdF,GACD,GAAE,CAACL,EAAcD,IAelB,OACE,iCACE,UAACT,EAAD,CAASkB,UAAU,OAAOC,SAfT,SAAAC,GAGnB,GAFAA,EAAMC,iBAEsB,KAAxBX,EAAaY,OACf,OAAOC,MAAM,kBAEfd,EAAgB,CAAEf,MAAOgB,GAC1B,EAQG,WACE,SAACR,EAAD,CACEgB,UAAU,QACVM,KAAK,OACLC,GAAG,SACHC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAda,SAAAT,GACnBX,EAAgB,CAAEf,MAAO0B,EAAMU,OAAOC,OACvC,EAaOA,MAAOrB,KAET,SAACP,EAAD,CAAQqB,KAAK,SAASN,UAAU,SAAhC,SAAyC,eAI3C,wBACGb,EAAO2B,KAAI,gBAAGC,EAAH,EAAGA,eAAgBR,EAAnB,EAAmBA,GAAnB,OACV,yBACE,SAAC,KAAD,CAAMS,GAAE,kBAAaT,GAAMU,MAAO,CAAEC,KAAMxB,GAA1C,SACGqB,KAFIR,EADC,QAUnB,C","sources":["components/Services/API.js","components/SearchForm/SearchForm.styled.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'ca1e14ffb473d6a82f337d8c688837e0';\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const getMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів.\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\n// запит оглядів для сторінки кінофільму\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getQuery } from 'components/Services/API';\nimport {\n  Button,\n  Input,\n  Wrapper,\n} from 'components/SearchForm/SearchForm.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    !currentQuery && setSearchParams({});\n\n    const addQuery = async () => {\n      try {\n        const data = await getQuery(currentQuery);\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    addQuery();\n  }, [currentQuery, setSearchParams]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (currentQuery.trim() === '') {\n      return alert('Input is empty');\n    }\n    setSearchParams({ query: currentQuery });\n  };\n\n  const handleChange = event => {\n    setSearchParams({ query: event.target.value });\n  };\n\n  return (\n    <>\n      <Wrapper className=\"form\" onSubmit={handleSubmit}>\n        <Input\n          className=\"input\"\n          type=\"text\"\n          id=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleChange}\n          value={currentQuery}\n        />\n        <Button type=\"submit\" className=\"button\">\n          Search\n        </Button>\n      </Wrapper>\n      <ul>\n        {movies.map(({ original_title, id }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getMovies","response","data","results","getQuery","query","getDetails","movieId","getCast","cast","getReviews","Wrapper","styled","Input","Button","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","currentQuery","get","location","useLocation","useEffect","addQuery","console","log","className","onSubmit","event","preventDefault","trim","alert","type","id","autoComplete","autoFocus","placeholder","onChange","target","value","map","original_title","to","state","from"],"sourceRoot":""}